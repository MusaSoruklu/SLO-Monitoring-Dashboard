events {}

http {
    server {
        listen 80;
        server_name <your-ec2-public-ip-or-domain>;  # Replace this with your actual EC2 public IP or domain

        # Serve the frontend (Angular app)
        location / {
            proxy_pass http://frontend:80;  # Use the service name defined in Docker Compose
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Serve the backend (Flask API) on /api path
        location /api/ {
            proxy_pass http://backend:8001;  # Use the service name defined in Docker Compose
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Prometheus monitoring on /prometheus path
        location /prometheus/ {
            proxy_pass http://prometheus:9090;  # Use the service name defined in Docker Compose
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Grafana monitoring on /grafana path
        location /grafana/ {
            proxy_pass http://grafana:3000;  # Use the service name defined in Docker Compose
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Optional: Configure error pages or timeouts
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
